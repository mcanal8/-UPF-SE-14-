Seminar 1:
- En el ejercicio de clase solo salen stakeholders en el glosario, por otro lado se podrían haber encontrados más puntos oscuros y 
sus correspondientes propuestas de soluciones.
- El archivo principal se debería llamar index.html
- Faltan datos en cada punto: stakeholders importantes, puntos oscuros y no se definen funcionalidades en el glosario

Seminar 2:
- Documento final:
   · Debería haber un index.html que cuelgue de doc/
   · No se habla del tipo de compra (física o digital)
   · Ejercicio 3 falta alguna relación caso de uso y administrador
   · El diagrama de casos de uso se debería hacer conexo
   
Seminar 3:
- Relación web y pagos está al revés. Pasa lo mismo con colección y trabajos.
- Falta todo el sistema de distribución

Seminar 4:
- Ejercicio de clase, en el diagrama de estados se debe seleccionar una clase
- En el final, para el state-diagram, la clase no acaba de estar bien especificada
- En el final, faltan bucles hacia atrás en los diagramas de actividad

Seminar 5:
- En el ejercicio de clae, las relaciones son incorrectas y los atributos se deberían declarar como list de punteros.
- El seminario 5 no es accesible desde index.html
- El diagrama no se ajusta a lo que se pedía: el Facade debería gestionar como mínimo la memoria de Author, Client, Collection; 
la clase Editor no es necesaria; Faltan métodos de search, buy, publish, notify... todos los métodos deben ser accesibles desde 
el Facade; los atributos que son listas se deben poner como en este ej. works:list< Work* >

Seminar 6: 
- Include the improtant menthods in the classes belonging to dapter pattern (like in the example of the seminar)
- Cardinalitties are missing between the Facade and the adpater pattern

Seminar 7:
- One observer can be notified about many subjects. Check the cardinality between subject and observer
- When providing the complete class diagram, don't remove methods, attributes from previous semianrs or from previous patterns
- The upcoming news should be displayed in the webpage. This requirement has not been designed.

Seminar 8:
- Client should manage memory of SendNotification objects
- Use more meaningful method names (eg: FactoryMethod(), AlgorithmInterface())

Seminar 9:
- Fraction <Type> is the better way to refer Fraction objects types
- When passing object arguments into methods,better to use pass by reference with const to avoid copy and null values of objects 
- It's better if you have tested with more types of values too

Seminar 10:
- The web class (view) should also have GUI components like text box, lables, etc.
- It's better to include all the methods and attributes in the Model class (Facade)

